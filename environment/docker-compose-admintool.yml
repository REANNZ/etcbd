version: '3'
services:

  #reverse proxy / ssl termination / static file handling
  apache:
    restart: always
    build: ./apache/
    container_name: apache
    #log_driver: syslog
    environment:
        DJNRO_HOST: djnro
        HTTPS_PORT: 443
        HTTPD_ARGS: ""
        #HTTPD_ARGS: -DAPACHE_LOGS_STDOUT
    # import DjNRO env to have SITE_PUBLIC_HOSTNAME
    env_file:
        - localdev_admintool.env
        - global-env.env
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - apache-certs:/usr/local/apache2/conf/external
        - apache-logs:/usr/local/apache2/logs
    #links to reverse proxy the admin tool
    links:
        - "djnro:djnro"

  djnro:
    restart: always
    build: ./djnro/
    container_name: djnro
    #log_driver: syslog
    environment:
        DB_HOST: postgres
    env_file:
        - localdev_admintool.env
        - global-env.env
    volumes:
        - djnro-data:/djnro/data
    links:
        - "postgres:postgres"

  # djnro-cron periodically fetching upstream all.kml
  djnro-scheduler:
    restart: always
    build: ./djnro/
    container_name: djnro-scheduler
    #log_driver: syslog
    environment:
        DB_HOST: postgres
        KML_REFRESH_INTERVAL: 3600
    env_file:
        - localdev_admintool.env
        - global-env.env
    volumes:
        # shared data dir for the all.kml file
        - djnro-data:/djnro/data
    command: ./run-kml-refresh.sh

  postgres:
    restart: always
    container_name: postgres
    build: ./postgres/
    #log_driver: syslog
    env_file:
        - localdev_admintool.env
        - global-env.env
    volumes:
        - postgres-data:/var/lib/postgresql/data

  filebeat:
    restart: always
    container_name: filebeat
    build: ./filebeat-admintool
    environment:
        #LOGSTASH_DISABLE: "#"
        LOGSTASH_DISABLE: ""
    env_file:
        - localdev_admintool.env
        - global-env.env
    volumes:
        - filebeat-registry:/var/lib/filebeat
        # get access to Apache logs
        - apache-logs:/usr/local/apache2/logs

volumes:
  # all volume names will get prefixed with the project name - "admintool_"
  apache-certs: {}
  apache-logs: {}
  djnro-data: {}
  postgres-data: {}
  filebeat-registry: {}
