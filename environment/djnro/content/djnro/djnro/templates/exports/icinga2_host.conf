{% comment %}
    Expects the following in the context:
        host: the host (InstServer or NROServer hash) to render
        instrealmmons: realms to generate checks for
        confparams: configuration paramters
        servercontacts: list of contacts for server alerts (OPTIONAL)
{% endcomment %}
{% autoescape off %}
{% load addstr %}
{% load icingaescape %}
object Host "{{server.name}}" {
  import "eduroam-radius-host"

  {# check if this is an IPv6 address #}
  {% if ":" in server.host %}
  address6 = "{{server.host|icingaescape}}"
  {% else %}
  address = "{{server.host|icingaescape}}"
  {% endif %}

  vars.eduroam_secret = "{{server.secret|icingaescape}}"
  vars.eduroam_port = "{{server.port|icingaescape}}"

  {# conditionally define whether to monitor status server #}
  {% if server.status_server %}
  vars.eduroam_status_server = true
  {% else %}
  vars.eduroam_status_server = false
  {% endif %}

  {# now generate an entry for each monitored realm #}
  {% for irm in instrealmmons %}
  {% if irm.mon_type == 'localauthn' and irm.monlocalauthnparam %}
  vars.eduroam_accounts["{{ irm.realm.realm|addstr:'-'|addstr:irm.mon_type|icingaescape }}"] = {
      eduroam_user = "{{ irm.monlocalauthnparam.username|icingaescape }}"
      eduroam_password = "{{ irm.monlocalauthnparam.passwp|icingaescape }}"
      eduroam_method = "WPA-EAP"
      eduroam_eap_method = "{{ irm.monlocalauthnparam.eap_method|icingaescape }}"
      eduroam_phase2 = "{{ irm.monlocalauthnparam.phase2|icingaescape }}"
      {% if confparams.operator_name %}
      eduroam_operator_name = "{{ confparams.operator_name }}"
      {% endif %}
      {% if confparams.request_cui %}
      eduroam_request_cui = true
      {% endif %}
      {% if confparams.verbosity %}
      eduroam_verbosity = {{ confparams.verbosity }}
      {% endif %}
      {% if irm.realm.instid.institutiondetails.contact.all %}
      // List contacts for {{ irm.realm.instid.get_name|icingaescape }}
      notification["mail"] = {
        users = [
      {% for contact in irm.realm.instid.institutiondetails.contact.all %}
        "{{contact.email|icingaescape}}",
      {% endfor %}
        ]
      }
      {% endif %}
  }
  {% endif %}
  {% endfor %}


  {# // notify all server admins (and always include group icingaadmins) #}

  vars.notification["mail"] = {
    {% if servercontacts %}
    users = [
    {% for contact in servercontacts %}
        "{{contact.email|icingaescape}}",
    {% endfor %}
    ]
    {% endif %}
    groups = [ "icingaadmins" ]
  }

}

{% endautoescape %}
