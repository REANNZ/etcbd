{% comment %}
    Expects the following in the context:
        host: the host (InstServer or NROServer hash) to render
        instrealmmons: realms to generate checks for
        confparams: configuration paramters
        server_addr: dict of server address lookups (each a dict with 'ipv4' and 'ipv6' entries)
        servercontacts: list of contacts for server alerts (OPTIONAL)
{% endcomment %}
{% autoescape off %}
{% load addstr %}
{% load server2ipv4addr %}
{% load server2ipv6addr %}
{% load icingaescape %}
object Host "{{server.host}}" {
  import "eduroam-radius-host"

  display_name = "{{server.name|icingaescape}}"

  {# check if this server has an IPv4 address #}
  {% if server.host|server2ipv4addr:server_addr %}
  address = "{{ server.host|server2ipv4addr:server_addr}}"
  {% endif %}
  {# check if this server has an IPv6 address #}
  {% if server.host|server2ipv6addr:server_addr %}
  address6 = "{{ server.host|server2ipv6addr:server_addr }}"
  {% endif %}

  vars.eduroam_secret = "{{server.secret|icingaescape}}"
  vars.eduroam_port = "{{server.auth_port|icingaescape}}"

  {# conditionally define whether to monitor status server #}
  {% if server.status_server %}
  vars.eduroam_status_server = true
  {% else %}
  vars.eduroam_status_server = false
  {% endif %}

  {# now generate an entry for each monitored realm #}
  {% for irm in instrealmmons %}
  {% if irm.mon_type == 'localauthn' and irm.monlocalauthnparam %}
  vars.eduroam_accounts["{{ irm.realm.realm|addstr:'-'|addstr:irm.mon_type|icingaescape }}"] = {
      eduroam_user = "{{ irm.monlocalauthnparam.username|icingaescape }}"
      eduroam_password = "{{ irm.monlocalauthnparam.passwp|icingaescape }}"
      eduroam_method = "WPA-EAP"
      eduroam_eap_method = "{{ irm.monlocalauthnparam.eap_method|icingaescape }}"
      {# use filters to translate MS-CHAPv2 to MSCHAPV2 #}
      eduroam_phase2 = "{{ irm.monlocalauthnparam.phase2|cut:"-"|upper|icingaescape }}"
      {% if confparams.operator_name %}
      eduroam_operator_name = "{{ confparams.operator_name }}"
      {% endif %}
      {% if confparams.request_cui %}
      eduroam_request_cui = true
      {% endif %}
      {% if confparams.verbosity %}
      eduroam_verbosity = {{ confparams.verbosity }}
      {% endif %}
      {% if irm.realm.instid.institutiondetails.contact.all and confparams.notify_inst_contacts %}
      // List contacts for {{ irm.realm.instid.get_name|icingaescape }}
      notification["mail"] = {
        users = [
      {% for contact in irm.realm.instid.institutiondetails.contact.all %}
        "{{contact.email|icingaescape}}",
      {% endfor %}
        ]
      }
      {% endif %}
  }
  {% endif %}
  {% endfor %}


  {# // notify all server admins (and always include group icingaadmins) #}

  vars.notification["mail"] = {
    {% if servercontacts and confparams.notify_inst_contacts %}
    users = [
    {% for contact in servercontacts %}
        "{{contact.email|icingaescape}}",
    {% endfor %}
    ]
    {% endif %}
    groups = [ "icingaadmins" ]
  }

}

{% endautoescape %}
