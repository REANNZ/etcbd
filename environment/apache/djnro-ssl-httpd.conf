Listen 443

# basic SSL config
SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4
SSLHonorCipherOrder on
SSLProtocol all -SSLv3 -SSLv2

# boilerplate SSL config
SSLPassPhraseDialog  builtin
SSLSessionCache        "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300

<VirtualHost _default_:443>
    # TODO: configure this
    ServerAdmin ${ADMIN_EMAIL}
    ServerName ${SITE_PUBLIC_HOSTNAME}:443

    ProxyRequests off
    ProxyPreserveHost on

    # TODO: consider dynamic configuration
    # NOTE: we can get dynamic configuration working with:
    ## ProxyPassInterpolateEnv On
    ## ProxyPass / http://djnro:${DJNRO_PORT_3031_TCP_PORT}/ interpolate
    ## ProxyPassReverse / http://djnro:${DJNRO_PORT_3031_TCP_PORT}/ interpolate
    # BUT: as port 3031 will always be port 3031, we can just hard-code as:
    # (with per-etc-hosts hostname):
    # INSTEAD: be compatible with Kubernetes and accept an explicit link via DJNRO_HOST
    ProxyPass / http://${DJNRO_HOST}:3031/
    ProxyPassReverse / http://${DJNRO_HOST}:3031/

    # VirtualHost SSL config
    SSLEngine on
    # certificate AND chain
    SSLCertificateFile "/usr/local/apache2/conf/external/server.crt"
    SSLCertificateKeyFile "/usr/local/apache2/conf/external/server.key"

    # tell DjNRO we have forwarded over SSL
    RequestHeader set X-Forwarded-SSL on

    # really old browser hacks from default config
    BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

    # Logging.  Default Docker Apache logs go to:
    #     CustomLog /proc/self/fd/1 common
    # Default DEB Apache logs to
    #     CustomLog ${APACHE_LOG_DIR}/access.log combined
    # PROD: Send to file instead
    # DEV: Tee to file, let stdout trickle up to docker
    # Dtto for ErrorLog
    <IfDefine APACHE_LOGS_STDOUT>
    CustomLog "|/usr/bin/tee -a /usr/local/apache2/logs/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
    ErrorLog "|/usr/bin/tee -a /usr/local/apache2/logs/ssl_error_log"
    </IfDefine>

    <IfDefine !APACHE_LOGS_STDOUT>
    CustomLog "/usr/local/apache2/logs/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
    ErrorLog "/usr/local/apache2/logs/ssl_error_log"
    </IfDefine>

</VirtualHost>



